@using ApplicationLayer.ViewModels;
@model LoginViewModel

<form method="post" asp-controller="Listener" asp-action="Login" class="mt-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                @if (TempData["InvalidUser"] != null)
                {
                    <div class="alert alert-danger strong-red" role="alert">
                        @TempData["InvalidUser"]
                    </div>
                }
                <div class="text-center mb-4" data-aos="fade-down">
                    <h1 class="info-text"><i class="bi bi-music-note-list"></i></h1>
                    <p>Create an account to listen to music and podcasts for free</p>
                </div>
                <div class="form-group mb-3" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="200">
                    <label for="Email" class="form-label">Email:</label>
                    <input type="email" class="form-control rounded-pill" asp-for="Email" id="Email" placeholder="Enter your email" data-aos="fade-up" data-aos-duration="1000">
                    <span class="text-danger" asp-validation-for="Email" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="200"></span>
                </div>
                <div class="form-group mb-3" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="400">
                    <label for="Password" class="form-label">Password:</label>
                    <div class="input-group">
                        <input type="password" class="form-control rounded-pill" asp-for="Password" id="Password" placeholder="Enter your password" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="400">
                        <button class="btn btn-outline-secondary rounded-pill ms-2" type="button" id="togglePassword" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="400"><i class="bi bi-eye"></i></button>
                    </div>
                    <span class="text-danger" asp-validation-for="Password" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="400"></span>
                </div>
                <div class="text-center" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="600">
                    <button type="submit" class="btn btn-primary rounded-pill mt-3" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="600">Login</button>
                </div>
                <hr data-aos="fade-up" data-aos-duration="1000" data-aos-delay="800">
                <div class="text-center mt-3" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="1000">
                    <p class="mb-0">Don't have an account? <a asp-action="RegisterListener" asp-controller="Listener" class="text-decoration-none">Sign up</a></p>
                </div>
            </div>
        </div>
    </div>
</form>

<style>
    .strong-green {
        background-color: #28a745;
        color: #fff;
    }

    .strong-red {
        background-color: #dc3545;
        color: #fff;
    }

    .info-text {
        background: linear-gradient(to right, #ff5733, #d90000);
        -webkit-background-clip: text;
        color: transparent;
        padding: 10px 20px;
        margin-bottom: 20px;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.1/dist/aos.js"></script>
    <script>
        AOS.init();
        document.getElementById('togglePassword').addEventListener('click', function () {
            var passwordInput = document.getElementById('Password');
            var type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.querySelector('i').classList.toggle('bi-eye');
            this.querySelector('i').classList.toggle('bi-eye-slash');
        });
    </script>
}
