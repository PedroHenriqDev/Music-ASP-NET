@using ApplicationLayer.ViewModels

@model SearchMusics

@{
    ViewData["Title"] = "Add Music to Playlist";
}

<div class="search-box">
    <form id="searchForm" asp-action="SearchMusicToPlaylist" asp-controller="Search" method="post">
        <input type="text" name="query" class="search-input bg-light text-dark" placeholder="Enter your search query...">
        <input type="hidden" id="musicIdsInput" name="musicIds" />
        <button type="submit" class="search-button bg-black text-light"><i class="bi bi-search"></i></button>
    </form>
</div>

<form id="addMusicForm" asp-action="AddPlaylistMusics" asp-controller="Playlist" method="post">
    <div class="card shadow-lg" style="margin-bottom:40px">
        <div class="card-body text-center">
            <h2 class="text-center">Music To Add</h2>
            <div id="selectedMusics" style="margin-top:20px;">
            </div>
            <button type="submit" style="margin-top:15px;" class="text-center btn btn-outline-success">Add Musics <i class="bi bi-plus-lg"></i></button>
        </div>
    </div>
</form>

@if (Model.FoundMusics != null)
{
    <div class="card shadow-lg" style="margin-bottom:40px">
        <div class="card-body">
            <h2 class="text-center">Result of search</h2>
            <div class="music-container">
                @foreach (var music in Model.FoundMusics)
                {
                    <div class="music-item">
                        <div class="music-info">
                            <img src="data:image/png;base64,@(Convert.ToBase64String(music.MusicData.Picture))" class="music-image" />
                            <span class="music-name">@music.Music.Name</span>
                            <span class="artist-name">@music.Music.Artist.Name</span>
                            <button type="button" class="btn btn-success add-to-playlist" data-music-id="@music.Music.Id" data-music-name="@music.Music.Name" data-artist-name="@music.Music.Artist.Name">Add</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@if (Model != null && Model.MusicsSuggestion.Any())
{
    <div class="card shadow-lg">
        <div class="card-body">
            <h2 class="text-center">Sugested musics</h2>
            <div class="music-container">
                @foreach (var music in Model.MusicsSuggestion)
                {
                    <div class="music-item">
                        <div class="music-info">
                            <img src="data:image/png;base64,@(Convert.ToBase64String(music.MusicData.Picture))" class="music-image" />
                            <span class="music-name">@music.Music.Name</span>
                            <span class="artist-name">@music.Music.Artist.Name</span>
                            <button type="button" class="btn btn-success add-to-playlist" data-music-id="@music.Music.Id" data-music-name="@music.Music.Name" data-artist-name="@music.Music.Artist.Name">Add</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<style>
    .search-box {
        margin-bottom: 20px;
        text-align: center;
    }

    .search-input {
        width: 60%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    .search-button {
        padding: 10px 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f0f0f0;
        font-size: 16px;
        cursor: pointer;
    }

        .search-button:hover {
            background-color: #e0e0e0;
        }

    .card {
        border-radius: 20px;
    }

    .music-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        padding: 20px;
    }

    .music-item {
        text-align: center;
        padding: 10px;
        background-color: #282828;
        width: 220px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .music-item:hover {
            transform: translateY(-5px);
        }

    .music-info {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }

    .music-name {
        font-weight: bold;
        color: white;
        margin-top: 10px;
    }

    .artist-name {
        color: #888;
        margin-top: 5px;
    }

    .music-image {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 10px;
        margin-bottom: 10px;
    }

    .selected-music-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        background-color: #282828;
        border-radius: 10px;
        margin-bottom: 10px;
    }

        .selected-music-item .music-name,
        .selected-music-item .artist-name {
            color: white;
            margin: 0;
        }

        .selected-music-item .remove-music {
            background-color: #dc3545;
            border: none;
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

            .selected-music-item .remove-music:hover {
                background-color: #c82333;
            }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.add-to-playlist').click(function () {
                var musicId = $(this).data('music-id');
                var musicName = $(this).data('music-name');
                var artistName = $(this).data('artist-name');

                if ($('#selectedMusics').find('input[value="' + musicId + '"]').length === 0) {
                    $('#selectedMusics').append('<div class="selected-music-item">' +
                        '<span class="music-name">' + musicName + '</span>' +
                        '<span class="artist-name">' + artistName + '</span>' +
                        '<button type="button" class="btn btn-danger btn-sm remove-music">Remove</button>' +
                        '<input type="hidden" name="selectedMusicIds" value="' + musicId + '" />' +
                        '</div>');

                    updateMusicIdsInput();
                }
            });

            $(document).on('click', '.remove-music', function () {
                $(this).parent().remove();
                updateMusicIdsInput();
            });

            function updateMusicIdsInput() {
                var musicIds = [];
                $('#selectedMusics input[name="selectedMusicIds"]').each(function () {
                    musicIds.push($(this).val());
                });
                $('#musicIdsInput').val(musicIds.join(',')); 
            }
        });

        function submitIdsToController() {
            var musicIds = $('#musicIdsInput').val();

            if (musicIds.trim() !== '') {
                $('#musicIdsInput').val(musicIds);

                $('#addMusicForm').submit();
            } else {
                console.log('Nenhum ID de música selecionado.');
            }
        }
    </script>
}


